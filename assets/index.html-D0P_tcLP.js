import{_ as c,c as m,a as e,d as n,b as i,e as s,w as a,r,o as u}from"./app-Dk7ccnrl.js";const f="/src/2025-03-02_21-34-53.png",k="/src/2025-03-02_21-43-02.png",b="/src/2025-03-02_21-44-08.png",_="/src/2025-03-02_21-44-52.png",y="/src/2025-03-02_21-46-06.png",v="/src/2025-03-02_21-47-18.png",C="/src/2025-03-02_21-52-46.png",E={},G={class:"vp-steps"};function x(D,t){const l=r("VPIcon"),o=r("VPLink"),p=r("VPVideoEmbed"),d=r("CodeTabs");return u(),m("div",null,[e("p",null,[t[2]||(t[2]=s("编写者：",-1)),i(o,{href:"/friends/persons/"},{default:a(()=>[i(l,{provider:"iconify",name:"noto:red-heart"}),t[0]||(t[0]=s("rand777",-1))]),_:1,__:[0]}),t[3]||(t[3]=s()),i(o,{href:"/friends/persons/"},{default:a(()=>[i(l,{provider:"iconify",name:"noto:red-heart"}),t[1]||(t[1]=s("翻斗花园牛爷爷",-1))]),_:1,__:[1]})]),t[12]||(t[12]=n('<div class="hint-container tip"><p class="hint-container-title">本文已完成并校对，部分内容引用自 <a href="https://csdiy.wiki/" target="_blank" rel="noopener noreferrer">计算机自学指南</a></p></div><h2 id="为什么使用git" tabindex="-1"><a class="header-anchor" href="#为什么使用git"><span>为什么使用Git</span></a></h2><h3 id="典型的使用场景" tabindex="-1"><a class="header-anchor" href="#典型的使用场景"><span>典型的使用场景</span></a></h3><blockquote><ul><li>你在学校电脑上写好了代码，但是不想关机就丢失了，这时可以上传到代码管理仓库，下次清空电脑后只需要从你的仓库拉取代码即可，不用背电脑咯。</li><li>你有好几台电脑，不想带着笨重的游戏本到处跑，可以只带一个轻薄本出门，拉取其他设备上写好的代码即可。</li><li>你有一个团队，需要合作完成一个项目，在你所在的分支工作，提交 PR 即可。</li></ul></blockquote><p>Git 是一款分布式的代码版本控制工具，Linux 之父 Linus 嫌弃当时主流的中心式的版本控制工具太难用还要花钱，就自己开发出了 Git 用来维护 Linux 的版本（给大佬跪了）。</p><p>Git 的设计非常优雅，但初学者通常因为很难理解其内部逻辑因此会觉得非常难用。对 Git 不熟悉的初学者很容易出现因为误用命令将代码给控制版本控制没了的状况（好吧是我）。</p><p>但相信我，和 Vim 一样，Git 是一款你最终掌握之后会感叹“它值得！”的神器。</p><h2 id="如何学习git" tabindex="-1"><a class="header-anchor" href="#如何学习git"><span>如何学习Git</span></a></h2><p><a href="https://learngitbranching.js.org/?locale=zh_CN" target="_blank" rel="noopener noreferrer">先试试这个可视化小游戏</a></p><p>不建议初学者在一知半解的情况下贸然使用 Git，因为它的内部逻辑并不能熟能生巧，而是需要花时间去理解。我推荐的学习路线如下：</p>',10)),e("div",G,[t[4]||(t[4]=e("ol",null,[e("li",null,[s("阅读这篇 "),e("a",{href:"https://missing.csail.mit.edu/2020/version-control/",target:"_blank",rel:"noopener noreferrer"},"Git tutorial"),s("，视频的话可以看这个尚硅谷Git教程")])],-1)),i(p,{src:"https://player.bilibili.com/player.html?bvid=BV1wm4y1z7Dg&autoplay=0&high_quality=1",width:"100%",title:"Bilibili",type:"bilibili"}),t[5]||(t[5]=n('<ol start="2"><li><p>阅读这本开源书籍 <a href="https://git-scm.com/book/en/v2" target="_blank" rel="noopener noreferrer">Pro Git</a> 的 Chapter1 - Chapter5，是的没错，学 Git 需要读一本书（捂脸）。</p></li><li><p>此时你已经掌握了 Git 的原理和绝大部分用法，接下来就可以在实践中反复巩固 Git 的命令了。但用好它同样是一门哲学，我个人觉得这篇如何写好 <a href="https://cbea.ms/git-commit/" target="_blank" rel="noopener noreferrer">Commit Message</a> 的博客非常值得一读。</p></li><li><p>好的此时你已经爱上了 Git，你已经不满足于学会它了，你想自己实现一个 Git！巧了，我当年也有这样的想法，这篇 <a href="https://wyag.thb.lt/" target="_blank" rel="noopener noreferrer">tutorial</a> 可以满足你！</p></li><li><p>什么？光实现一个 Git 无法满足你？小伙子/小仙女有前途，巧的是我也喜欢造轮子，这两个 GitHub 项目 <a href="https://github.com/codecrafters-io/build-your-own-x" target="_blank" rel="noopener noreferrer">build-your-own-x</a> 和 <a href="https://github.com/practical-tutorials/project-based-learning" target="_blank" rel="noopener noreferrer">project-based-learning</a> 收录了你能想到的各种造轮子教程，比如：自己造个编辑器、自己写个虚拟机、自己写个 docker、自己写个 TCP 等等等等。</p></li></ol>',1))]),t[13]||(t[13]=e("p",null,[e("a",{href:"https://zj-git-guide.readthedocs.io/zh-cn/latest/get-started/%E5%85%B3%E4%BA%8E%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/",target:"_blank",rel:"noopener noreferrer"},"关于版本控制 - Git Guide")],-1)),t[14]||(t[14]=e("h2",{id:"软件集成",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#软件集成"},[e("span",null,"软件集成")])],-1)),e("p",null,[t[8]||(t[8]=s("通过设置，git 可以在各 IDE 中进行集成，无需使用 git-bash 命令行工具，你可能需要知道",-1)),i(o,{href:"/campus-wiki/common-softwares/IDE/"},{default:a(()=>t[6]||(t[6]=[s("什么是IDE",-1)])),_:1,__:[6]}),t[9]||(t[9]=s("，",-1)),i(o,{href:"/campus-wiki/apply-student-email/#%E5%AD%A6%E7%94%9F%E9%82%AE%E7%AE%B1%E7%9A%84%E4%BD%9C%E7%94%A8"},{default:a(()=>t[7]||(t[7]=[s("如何申请教育版",-1)])),_:1,__:[7]})]),t[15]||(t[15]=n('<h2 id="设置ssh密钥" tabindex="-1"><a class="header-anchor" href="#设置ssh密钥"><span>设置SSH密钥</span></a></h2><p>第一次需要生成 SSH 密钥对，可以按照以下步骤在你的终端或命令提示符中执行相应的命令：</p><div class="vp-steps"><ol><li><strong>打开终端</strong>（在 Linux 或 macOS 上）或 <strong>命令提示符/PowerShell</strong>（在 Windows 上）。</li><li><strong>输入以下命令</strong>（以生成 RSA 类型的密钥）：</li></ol><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#D4D4D4;--shiki-light-bg:#fff;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes github-light dark-plus vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCDCAA;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#569CD6;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#CE9178;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#569CD6;"> -b</span><span style="--shiki-light:#005CC5;--shiki-dark:#B5CEA8;"> 4096</span><span style="--shiki-light:#005CC5;--shiki-dark:#569CD6;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#CE9178;"> &quot;your_email@example.com&quot;</span></span></code></pre></div><p>其中 -t rsa 指定密钥类型为 RSA，-b 4096 指定密钥长度为 4096 位，-C 是可选的注释字段，通常你可以用自己的电子邮件地址来标识这个密钥。</p><ol start="3"><li><p><strong>按回车键(一路回车)</strong>，它会提示你输入保存密钥的文件路径。默认情况下，密钥会保存在 <code>~/.ssh/id_rsa</code>（Linux 和 macOS）或 <code>C:\\Users\\&lt;Username&gt;\\.ssh\\id_rsa</code>（Windows）中。如果你想使用默认位置，可以直接按回车键。</p></li><li><p><strong>接下来，它会提示你输入一个密码短语。</strong> 你可以选择输入一个密码短语以增加安全性，或者直接按回车键不使用密码短语。</p></li><li><p><strong>生成完成后，你会看到类似下面的输出:</strong> <img src="'+f+'" alt="2025-03-02_21-34-53.png" width="876" height="393"></p></li><li><p><strong>查看公钥和私钥</strong> 你可以使用以下命令查看公钥内容（确保不要共享私钥）：</p></li></ol><div class="language-shell" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#24292e;--shiki-dark:#D4D4D4;--shiki-light-bg:#fff;--shiki-dark-bg:#1E1E1E;"><pre class="shiki shiki-themes github-light dark-plus vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#DCDCAA;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#CE9178;"> ~/.ssh/id_rsa.pub</span></span></code></pre></div><p>私钥:<code>~/.ssh/id_rsa</code></p><p>公钥:<code>~/.ssh/id_rsa.pub</code></p><ol start="7"><li><strong>将公钥添加到服务器:</strong> 如果你要将生成的公钥添加到远程服务器上，通常需要将 <code>id_rsa.pub</code> 的内容添加到该服务器的 <code>~/.ssh/authorized_keys</code> 文件中。</li></ol></div><h3 id="查看ssh公钥" tabindex="-1"><a class="header-anchor" href="#查看ssh公钥"><span>查看SSH公钥</span></a></h3><p>安装 git 后，在桌面右键</p><p><img src="'+k+'" alt="2025-03-02_21-43-02.png" width="411" height="591"></p><p><img src="'+b+'" alt="2025-03-02_21-44-08.png" width="592" height="269"></p><p><img src="'+_+'" alt="2025-03-02_21-44-52.png" width="544" height="284"></p><h3 id="github设置" tabindex="-1"><a class="header-anchor" href="#github设置"><span>Github设置</span></a></h3><p>进入个人 github 主页，点击设置：</p><p><img src="'+y+'" alt="2025-03-02_21-46-06.png" width="2560" height="1348"></p><p><img src="'+v+'" alt="2025-03-02_21-47-18.png" width="2361" height="1102"></p><p>Title可以填写设备名，比如笔记本</p><p>Key Type不变</p><p>Key把刚刚复制的粘贴进去</p><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3><p>win + r 输入并打开cmd</p>',17)),i(d,{id:"191",data:[{id:"SSH克隆仓库"}]},{title0:a(({value:h,isActive:g})=>t[10]||(t[10]=[e("span",null,"SSH克隆仓库",-1)])),tab0:a(({value:h,isActive:g})=>t[11]||(t[11]=[e("div",{class:"language-shell","data-highlighter":"shiki","data-ext":"shell",style:{"--shiki-light":"#24292e","--shiki-dark":"#D4D4D4","--shiki-light-bg":"#fff","--shiki-dark-bg":"#1E1E1E"}},[e("pre",{class:"shiki shiki-themes github-light dark-plus vp-code"},[e("code",{class:"language-shell"},[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#DCDCAA"}},"git"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#CE9178"}}," clone"),e("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#CE9178"}}," git@github.com:kvcache-ai/ktransformers.git")])])])],-1)])),_:1}),t[16]||(t[16]=e("p",null,[s("显示 "),e("img",{src:C,alt:"2025-03-02_21-52-46.png",width:"983",height:"196"})],-1)),t[17]||(t[17]=e("p",null,"即为成功设置。",-1))])}const A=c(E,[["render",x]]),T=JSON.parse('{"path":"/csdiy/tools-must/git/","title":"Git","lang":"zh-CN","frontmatter":{"title":"Git","createTime":"2025/03/02 21:14:04","permalink":"/csdiy/tools-must/git/","icon":"skill-icons:git","description":"编写者： 本文已完成并校对，部分内容引用自 计算机自学指南 为什么使用Git 典型的使用场景 你在学校电脑上写好了代码，但是不想关机就丢失了，这时可以上传到代码管理仓库，下次清空电脑后只需要从你的仓库拉取代码即可，不用背电脑咯。 你有好几台电脑，不想带着笨重的游戏本到处跑，可以只带一个轻薄本出门，拉取其他设备上写好的代码即可。 你有一个团队，需要合作完...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git\\",\\"image\\":[\\"https://docs.pguide.dev/src/2025-03-02_21-34-53.png\\",\\"https://docs.pguide.dev/src/2025-03-02_21-43-02.png\\",\\"https://docs.pguide.dev/src/2025-03-02_21-44-08.png\\",\\"https://docs.pguide.dev/src/2025-03-02_21-44-52.png\\",\\"https://docs.pguide.dev/src/2025-03-02_21-46-06.png\\",\\"https://docs.pguide.dev/src/2025-03-02_21-47-18.png\\",\\"https://docs.pguide.dev/src/2025-03-02_21-52-46.png\\"],\\"dateModified\\":\\"2025-08-09T23:04:13.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.pguide.dev/csdiy/tools-must/git/"}],["meta",{"property":"og:site_name","content":"PGuide Docs"}],["meta",{"property":"og:title","content":"Git"}],["meta",{"property":"og:description","content":"编写者： 本文已完成并校对，部分内容引用自 计算机自学指南 为什么使用Git 典型的使用场景 你在学校电脑上写好了代码，但是不想关机就丢失了，这时可以上传到代码管理仓库，下次清空电脑后只需要从你的仓库拉取代码即可，不用背电脑咯。 你有好几台电脑，不想带着笨重的游戏本到处跑，可以只带一个轻薄本出门，拉取其他设备上写好的代码即可。 你有一个团队，需要合作完..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://docs.pguide.dev/src/2025-03-02_21-34-53.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-09T23:04:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-09T23:04:13.000Z"}]]},"readingTime":{"minutes":4.54,"words":1361},"git":{"createdTime":1740924444000,"updatedTime":1754780653000,"contributors":[{"name":"MenTouGouMouse","username":"MenTouGouMouse","email":"3283654267@qq.com","commits":2,"avatar":"https://avatars.githubusercontent.com/MenTouGouMouse?v=4","url":"https://github.com/MenTouGouMouse"},{"name":"rand777gg","username":"rand777gg","email":"losmosga@foxmail.com","commits":6,"avatar":"https://avatars.githubusercontent.com/rand777gg?v=4","url":"https://github.com/rand777gg"},{"name":"zsl","username":"zsl","email":"911163058@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/zsl?v=4","url":"https://github.com/zsl"}],"changelog":[{"hash":"bdf2455124b9cff6b5f45134c297e89f5aa70966","time":1754780653000,"email":"rand777@pguide.studio","author":"rand777gg","message":"docs: update all site structure"},{"hash":"11641e48535519bc21f573ac5f1d4faef9516f36","time":1754725868000,"email":"rand777@pguide.studio","author":"rand777gg","message":"refactor(docs/project-docs|docs/campus-wiki): update docs structure of projects and refactor campus-wiki"},{"hash":"f5885abbc041c8a98714a6578e5bf563fc6b3943","time":1742336191000,"email":"losmosga@foxmail.com","author":"rand777gg","message":"docs: improve docs"},{"hash":"35d3a1609745539f4f41ae0af0b147ed163e36b1","time":1741368394000,"email":"losmosga@foxmail.com","author":"rand777gg","message":"docs: clash for windows"},{"hash":"2adb997258f706727c866382d37383942116e359","time":1741248768000,"email":"911163058@qq.com","author":"zsl","message":"docs: git文档修改，添加句号"},{"hash":"6f8eef3ca1451bd6e2adfa233d6cc6d477724e5f","time":1741132594000,"email":"losmosga@foxmail.com","author":"rand777gg","message":"docs: many new changes"},{"hash":"9926510adb7d858fa40a5d803038be943d777ac4","time":1741022834000,"email":"losmosga@foxmail.com","author":"rand777gg","message":"refactor: content modification"},{"hash":"b4eb3f8338bd00a9f0c4f8a4f70dd716611af496","time":1740924444000,"email":"3283654267@qq.com","author":"MenTouGouMouse","message":"docs: 添加学习路线前端开发、必学工具、编程入门、开发规范文档，新增项目README文档注意事项"},{"hash":"84abdd2c74c1a3129d8b5f30efcd8858bae25390","time":1740924444000,"email":"3283654267@qq.com","author":"MenTouGouMouse","message":"docs: 添加学习路线前端开发、必学工具、编程入门、开发规范文档，新增项目README文档注意事项"}]},"autoDesc":true,"filePathRelative":"notes/CS-DIY/1.必学工具/1.Git.md","headers":[]}');export{A as comp,T as data};

import{_ as n,c as s,a as m,d as l,e as t,b as r,w as p,r as a,o as c}from"./app-Dk7ccnrl.js";const d={};function h(f,e){const o=a("VPIcon"),i=a("VPLink");return c(),s("div",null,[m("p",null,[e[1]||(e[1]=t("编写者：",-1)),r(i,{href:"/friends/persons/"},{default:p(()=>[r(o,{provider:"iconify",name:"noto:red-heart"}),e[0]||(e[0]=t("rand777",-1))]),_:1,__:[0]})]),e[2]||(e[2]=l('<div class="hint-container tip"><p class="hint-container-title">本文已完成并校对，部分内容引用自 <a href="https://csdiy.wiki/" target="_blank" rel="noopener noreferrer">计算机自学指南</a></p></div><blockquote><p>Vim: 一种上古年代的现代文本编辑器</p></blockquote><h2 id="为什么学习vim" tabindex="-1"><a class="header-anchor" href="#为什么学习vim"><span>为什么学习Vim？</span></a></h2><p>在我看来 Vim 编辑器有如下的好处：</p><ul><li>让你的整个开发过程手指不需要离开键盘，而且光标的移动不需要方向键使得你的手指一直处在打字的最佳位置。</li><li>方便的文件切换以及面板控制可以让你同时开发多份文件甚至同一个文件的不同位置。</li><li>Vim 的宏操作可以批量化处理重复操作（例如多行 tab，批量加双引号等等）</li><li>Vim 是很多服务器自带的命令行编辑器，当你通过 ssh 连接远程服务器之后，由于没有图形界面，只能在命令行里进行开发（当然现在很多 IDE 如 PyCharm 提供了 ssh 插件可以解决这个问题）。</li><li>异常丰富的插件生态，让你拥有世界上最花里胡哨的命令行编辑器。</li></ul><h2 id="如何学习-vim" tabindex="-1"><a class="header-anchor" href="#如何学习-vim"><span>如何学习 Vim</span></a></h2><p>不幸的是 Vim 的学习曲线确实相当陡峭，我花了好几个星期才慢慢适应了用 Vim 进行开发的过程。最开始你会觉得非常不适应，但一旦熬过了初始阶段，相信我，你会爱上 Vim。</p><p>Vim 的学习资料浩如烟海，但掌握它最好的方式还是将它用在日常的开发过程中，而不是一上来就去学各种花里胡哨的高级 Vim 技巧。个人推荐的学习路线如下：</p><ul><li>先阅读这篇 <a href="https://missing.csail.mit.edu/2020/editors/" target="_blank" rel="noopener noreferrer">tutorial</a>，掌握基本的 Vim 概念和使用方式，不想看英文的可以阅读<a href="https://github.com/wsdjeg/vim-galore-zh_cn" target="_blank" rel="noopener noreferrer">这篇教程</a>。</li><li>用 Vim 自带的 vimtutor 进行练习，安装完 Vim 之后直接在命令行里输入 vimtutor 即可进入练习程序。</li><li>最后就是强迫自己使用 Vim 进行开发，IDE 里可以安装 Vim 插件。</li><li>等你完全适应 Vim 之后新的世界便向你敞开了大门，你可以按需配置自己的 Vim（修改 .vimrc 文件），网上有数不胜数的资源可以借鉴。</li><li>如果你想对配置 Vim 有更加深入的了解，Learn Vim Script the Hard Way 是一个很好的资源。</li></ul><h2 id="关于键位映射" tabindex="-1"><a class="header-anchor" href="#关于键位映射"><span>关于键位映射</span></a></h2><p>用 Vim 编辑代码的时候会频繁用到 ESC 和 CTRL 键, 但是这两个键都离 home row 很远, 可以把 CapsLock 键映射到 Esc 或者 Ctrl 键，让手更舒服一些。</p><p>Windows 系统可以使用 <a href="https://learn.microsoft.com/en-us/windows/powertoys/" target="_blank" rel="noopener noreferrer">Powertoys</a> 或者 <a href="https://www.autohotkey.com/" target="_blank" rel="noopener noreferrer">AutoHotkey</a> 重映射键位。</p><p>MacOS 系统提供了重映射键位的<a href="https://vim.fandom.com/wiki/Map_caps_lock_to_escape_in_macOS" target="_blank" rel="noopener noreferrer">设置</a>，另外也可以使用 <a href="https://karabiner-elements.pqrs.org/" target="_blank" rel="noopener noreferrer">Karabiner-Elements</a> 重映射。</p><p>Linux 系统可以使用 <a href="https://github.com/xremap/xremap" target="_blank" rel="noopener noreferrer">xremap</a> 进行映射，对于 wayland 和 x.org 都可以使用，并且支持分别映射点按和按住。</p><p>但更佳的做法是同时将 CapsLock 映射为 Ctrl 和 Esc，点按为 Esc，按住为 Ctrl。这是不同系统下的实现方法：</p><ul><li><a href="https://gist.github.com/sedm0784/4443120" target="_blank" rel="noopener noreferrer">Windows</a></li><li><a href="https://ke-complex-modifications.pqrs.org/#caps_lock_tapped_escape_held_left_control" target="_blank" rel="noopener noreferrer">MacOS</a></li><li><a href="https://www.jianshu.com/p/6fdc0e0fb266" target="_blank" rel="noopener noreferrer">Linux</a></li></ul>',16))])}const u=n(d,[["render",h]]),V=JSON.parse('{"path":"/csdiy/tools-must/Vim/","title":"Vim","lang":"zh-CN","frontmatter":{"title":"Vim","createTime":"2025/03/08 00:19:37","permalink":"/csdiy/tools-must/Vim/","icon":"devicon:vim","description":"编写者： 本文已完成并校对，部分内容引用自 计算机自学指南 Vim: 一种上古年代的现代文本编辑器 为什么学习Vim？ 在我看来 Vim 编辑器有如下的好处： 让你的整个开发过程手指不需要离开键盘，而且光标的移动不需要方向键使得你的手指一直处在打字的最佳位置。 方便的文件切换以及面板控制可以让你同时开发多份文件甚至同一个文件的不同位置。 Vim 的宏操...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vim\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-09T23:04:13.000Z\\",\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://docs.pguide.dev/csdiy/tools-must/Vim/"}],["meta",{"property":"og:site_name","content":"PGuide Docs"}],["meta",{"property":"og:title","content":"Vim"}],["meta",{"property":"og:description","content":"编写者： 本文已完成并校对，部分内容引用自 计算机自学指南 Vim: 一种上古年代的现代文本编辑器 为什么学习Vim？ 在我看来 Vim 编辑器有如下的好处： 让你的整个开发过程手指不需要离开键盘，而且光标的移动不需要方向键使得你的手指一直处在打字的最佳位置。 方便的文件切换以及面板控制可以让你同时开发多份文件甚至同一个文件的不同位置。 Vim 的宏操..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-09T23:04:13.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-09T23:04:13.000Z"}]]},"readingTime":{"minutes":2.69,"words":806},"git":{"createdTime":1741368394000,"updatedTime":1754780653000,"contributors":[{"name":"rand777gg","username":"rand777gg","email":"losmosga@foxmail.com","commits":2,"avatar":"https://avatars.githubusercontent.com/rand777gg?v=4","url":"https://github.com/rand777gg"}],"changelog":[{"hash":"bdf2455124b9cff6b5f45134c297e89f5aa70966","time":1754780653000,"email":"rand777@pguide.studio","author":"rand777gg","message":"docs: update all site structure"},{"hash":"35d3a1609745539f4f41ae0af0b147ed163e36b1","time":1741368394000,"email":"losmosga@foxmail.com","author":"rand777gg","message":"docs: clash for windows"}]},"autoDesc":true,"filePathRelative":"notes/CS-DIY/1.必学工具/3.Vim.md","headers":[]}');export{u as comp,V as data};
